@model Basecode.Data.ViewModels.ApplicantViewModel

@{
    ViewData["Title"] = "Reference";
}

<div class="container d-flex flex-column align-items-center justify-content-center mt-5 mb-5" style="width: 800px">
    <div class="container d-flex flex-row align-items-start justify-content-center gap-2 mb-5">
        <div class="d-flex flex-row align-items-center justify-content-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#EC3123" class="bi bi-check-circle" viewBox="0 0 16 16">
                <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z" />
                <path d="M10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z" />
            </svg>
            <p class="mb-0">Personal Information</p>
        </div>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#424856" class="bi bi-chevron-right mt-1" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
        </svg>
        <div class="d-flex flex-column align-items-center justify-content-start">
            <div class="d-flex flex-row align-items-center justify-content-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#EC3123" class="bi bi-2-circle-fill" viewBox="0 0 16 16">
                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0ZM6.646 6.24c0-.691.493-1.306 1.336-1.306.756 0 1.313.492 1.313 1.236 0 .697-.469 1.23-.902 1.705l-2.971 3.293V12h5.344v-1.107H7.268v-.077l1.974-2.22.096-.107c.688-.763 1.287-1.428 1.287-2.43 0-1.266-1.031-2.215-2.613-2.215-1.758 0-2.637 1.19-2.637 2.402v.065h1.271v-.07Z" />
                </svg>
                <p class="mb-0" style="color: #EC3123;">References</p>
            </div>
            <hr class="container opacity-100" style="height: 5px; color: #EC3123;" />
        </div>
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#424856" class="bi bi-chevron-right mt-1" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z" />
        </svg>
        <div class="d-flex flex-row align-items-center justify-content-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#EC3123" class="bi bi-3-circle" viewBox="0 0 16 16">
                <path d="M7.918 8.414h-.879V7.342h.838c.78 0 1.348-.522 1.342-1.237 0-.709-.563-1.195-1.348-1.195-.79 0-1.312.498-1.348 1.055H5.275c.036-1.137.95-2.115 2.625-2.121 1.594-.012 2.608.885 2.637 2.062.023 1.137-.885 1.776-1.482 1.875v.07c.703.07 1.71.64 1.734 1.917.024 1.459-1.277 2.396-2.93 2.396-1.705 0-2.707-.967-2.754-2.144H6.33c.059.597.68 1.06 1.541 1.066.973.006 1.6-.563 1.588-1.354-.006-.779-.621-1.318-1.541-1.318Z" />
                <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0ZM1 8a7 7 0 1 0 14 0A7 7 0 0 0 1 8Z" />
            </svg>
            <p class="mb-0">Confirmation</p>
        </div>
    </div>
    <form asp-controller="PublicApplication" asp-action="Confirmation" method="post" enctype="multipart/form-data">
        <input type="hidden" name="jobId" value="@TempData["JobOpeningId"]" />
        <input type="hidden" asp-for="Firstname" value="@Model.Firstname" />
        <input type="hidden" asp-for="Middlename" value="@Model.Middlename" />
        <input type="hidden" asp-for="Lastname" value="@Model.Lastname" />
        <input type="hidden" asp-for="Age" value="@Model.Age" />
        <input type="hidden" asp-for="Birthdate" value="@Model.Birthdate" />
        <input type="hidden" asp-for="Gender" value="@Model.Gender" />
        <input type="hidden" asp-for="Nationality" value="@Model.Nationality" />
        <input type="hidden" asp-for="Street" value="@Model.Street" />
        <input type="hidden" asp-for="City" value="@Model.City" />
        <input type="hidden" asp-for="Province" value="@Model.Province" />
        <input type="hidden" asp-for="Zip" value="@Model.Zip" />
        <input type="hidden" asp-for="Phone" value="@Model.Phone" />
        <input type="hidden" asp-for="Email" value="@Model.Email" />
        <input type="hidden" asp-for="CV" value="@TempData["FileData"]" />
        <input type="hidden" name="fileName" value="@TempData["FileName"]" />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="container d-flex flex-column align-items-center justify-content-center" style="width: 800px;">
            <div class="container" id="reference-list">
                <div class="row align-items-center justify-content-center text-end mb-4">
                    <div class="col-sm-2">
                        <p class="mb-0">Name</p>
                    </div>
                    <div class="col-sm-10">
                        <div class="d-flex column-gap-2">
                            <input type="text" asp-for="CharacterReferences[0].Name" class="form-control reference-input" placeholder="Full name" />
                        </div>
                    </div>
                </div>
                <div class="row align-items-center justify-content-center text-end mb-4">
                    <div class="col-sm-2">
                        <p class="mb-0">Address</p>
                    </div>
                    <div class="col-sm-10">
                        <div class="d-flex column-gap-2">
                            <input type="text" asp-for="CharacterReferences[0].Address" class="form-control reference-input" placeholder="Street address" />
                        </div>
                    </div>
                </div>
                <div class="row align-items-center justify-content-center text-end mb-4">
                    <div class="col-sm-2">
                        <p class="mb-0">Email</p>
                    </div>
                    <div class="col-sm-10">
                        <div class="d-flex column-gap-2 align-items-center justify-content-center">
                            <input type="email" asp-for="CharacterReferences[0].Email" class="form-control reference-input" placeholder="example@domain.com" />
                        </div>
                    </div>
                </div>
                @if (Model.CharacterReferences != null)
                {
                    for (int i = 1; i < Model.CharacterReferences.Count; i++)
                    {
                        <input type="text" asp-for="CharacterReferences[i].Name" class="form-control reference-input" placeholder="Full name" />
                        <input type="text" asp-for="CharacterReferences[i].Address" class="form-control reference-input" placeholder="Street address" />
                        <input type="email" asp-for="CharacterReferences[i].Email" class="form-control reference-input" placeholder="example@domain.com" />
                    }
                }
            </div>
            <div class="container d-flex align-items-center justify-content-center mb-4">
                <a id="addReferenceBtn">
                    <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="#EC3123" class="bi bi-plus-square" viewBox="0 0 16 16">
                        <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                    </svg>
                </a>
            </div>
            <div class="container d-flex flex-row align-items-centeratio justify-content-between mt-5">
                <a href="#" onclick="history.back();">
                    <button type="button" class="btn" style="background-color: #EC3123; color:white; width: 100px;">Back</button>
                </a>
                <button type="submit" class="btn" value="Create" style="background-color: #EC3123; color:white; width: 100px;">Next ></button>
            </div>
        </div>
    </form>
</div>

<script>
    var count = 1;
    // Function to add a new input field to the list
    function addInputField(containerId, inputClass, inputName) {
        var container = document.getElementById(containerId);
        var inputContainerOne = document.createElement("div");
        inputContainerOne.className = "row align-items-center justify-content-center text-end mb-4 mt-2";
        var inputContainerTwo = document.createElement("div");
        inputContainerTwo.className = "row align-items-center justify-content-center text-end mb-4";
        var inputContainerThree = document.createElement("div");
        inputContainerThree.className = "row align-items-center justify-content-center text-end mb-4";
        var nameRowContainerOne = document.createElement("div");
        nameRowContainerOne.className = "col-sm-2";
        var nameRowContainerTwo = document.createElement("div");
        nameRowContainerTwo.className = "col-sm-10";
        var nameLabel = document.createElement("p");
        nameLabel.className = "mb-0";
        nameLabel.innerHTML = "Name";
        var nameInputField = document.createElement("input");
        nameInputField.type = "text";
        nameInputField.className = "form-control " + inputClass;
        nameInputField.name = inputName + "[" + count + "].Name";
        nameInputField.placeholder = "Full name";
        var addressRowContainerOne = document.createElement("div");
        addressRowContainerOne.className = "col-sm-2";
        var addressRowContainerTwo = document.createElement("div");
        addressRowContainerTwo.className = "col-sm-10";
        var addressLabel = document.createElement("p");
        addressLabel.className = "mb-0";
        addressLabel.innerHTML = "Address";
        var addressInputField = document.createElement("input");
        addressInputField.type = "text";
        addressInputField.className = "form-control " + inputClass;
        addressInputField.name = inputName + "[" + count + "].Address";
        addressInputField.placeholder = "Street address";
        var emailRowContainerOne = document.createElement("div");
        emailRowContainerOne.className = "col-sm-2";
        var emailRowContainerTwo = document.createElement("div");
        emailRowContainerTwo.className = "col-sm-10";
        var emailLabel = document.createElement("p");
        emailLabel.className = "mb-0";
        emailLabel.innerHTML = "Email";
        var emailInputField = document.createElement("input");
        emailInputField.type = "email";
        emailInputField.className = "form-control " + inputClass;
        emailInputField.name = inputName + "[" + count + "].Email";
        emailInputField.placeholder = "example@domain.com";
        var hr = document.createElement("hr");
        hr.className = "container opacity-100 mb-4";
        hr.style.height = "1px";
        hr.style.color = "#424856";

        nameRowContainerOne.appendChild(nameLabel);
        nameRowContainerTwo.appendChild(nameInputField);
        addressRowContainerOne.appendChild(addressLabel);
        addressRowContainerTwo.appendChild(addressInputField);
        emailRowContainerOne.appendChild(emailLabel);
        emailRowContainerTwo.appendChild(emailInputField);
        container.appendChild(hr); // Append <hr> element first
        container.appendChild(inputContainerOne);
        container.appendChild(inputContainerTwo);
        container.appendChild(inputContainerThree);

        inputContainerOne.appendChild(nameRowContainerOne);
        inputContainerOne.appendChild(nameRowContainerTwo);
        inputContainerTwo.appendChild(addressRowContainerOne);
        inputContainerTwo.appendChild(addressRowContainerTwo);
        inputContainerThree.appendChild(emailRowContainerOne);
        inputContainerThree.appendChild(emailRowContainerTwo);

        count++;
    }

    // Add event listeners to the buttons
    var addReferenceBtn = document.getElementById("addReferenceBtn");
    addReferenceBtn.addEventListener("click", function () {
        addInputField("reference-list", "reference-input", "CharacterReferences");
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
